// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VehicleConfigurator.Model;

#nullable disable

namespace IndianFleetService.Migrations
{
    [DbContext(typeof(VehicleDbContext))]
    partial class VehicleDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("InvoiceDetail", b =>
                {
                    b.Property<int>("InvoiceDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceDetailId"));

                    b.Property<int?>("AltCompId")
                        .HasColumnType("int");

                    b.Property<int?>("InvoiceId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleDescription")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InvoiceDetailId");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceDetailMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.AlternateComponentMaster", b =>
                {
                    b.Property<int>("AltId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AltId"));

                    b.Property<int?>("AltCompId")
                        .HasColumnType("int");

                    b.Property<string>("AltCompType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CompId")
                        .HasColumnType("int");

                    b.Property<double>("DeltaPrice")
                        .HasColumnType("float");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("AltId");

                    b.HasIndex("CompId");

                    b.HasIndex("ModelId");

                    b.ToTable("AlternateComponentMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.ComponentMaster", b =>
                {
                    b.Property<int>("CompId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("compId");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CompId"));

                    b.Property<string>("CompName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompId");

                    b.ToTable("ComponentMasterMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.InvoiceHeader", b =>
                {
                    b.Property<int>("InvoiceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InvoiceId"));

                    b.Property<DateTime>("BillingDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CompanyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("Telephone")
                        .HasColumnType("int");

                    b.Property<int?>("UserDataUserId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InvoiceId");

                    b.HasIndex("UserDataUserId");

                    b.ToTable("InvoiceHeaderMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.MfgMaster", b =>
                {
                    b.Property<int>("MfgId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MfgId"));

                    b.Property<string>("MfgName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SegId")
                        .HasColumnType("int");

                    b.HasKey("MfgId");

                    b.HasIndex("SegId");

                    b.ToTable("MfgMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.ModelMaster", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<double>("BasicPrice")
                        .HasColumnType("float");

                    b.Property<string>("ImagPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MfgId")
                        .HasColumnType("int");

                    b.Property<int>("MinQty")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ModelId");

                    b.HasIndex("MfgId");

                    b.ToTable("ModelMasterMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.SegmentMaster", b =>
                {
                    b.Property<int>("SegId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SegId"));

                    b.Property<string>("SegName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SegId");

                    b.ToTable("SegmentMasterMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.UserData", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telephone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("holding")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("UserDataMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.VehicleDetail", b =>
                {
                    b.Property<int>("ConfiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConfiId"));

                    b.Property<int>("CompId")
                        .HasColumnType("int");

                    b.Property<string>("CompType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConfigurable")
                        .HasColumnType("bit");

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.HasKey("ConfiId");

                    b.HasIndex("CompId");

                    b.HasIndex("ModelId");

                    b.ToTable("VehicleDetailMasters");
                });

            modelBuilder.Entity("InvoiceDetail", b =>
                {
                    b.HasOne("VehicleConfigurator.Model.InvoiceHeader", "InvoiceHeader")
                        .WithMany("InvoiceDetails")
                        .HasForeignKey("InvoiceId");

                    b.Navigation("InvoiceHeader");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.AlternateComponentMaster", b =>
                {
                    b.HasOne("VehicleConfigurator.Model.ComponentMaster", "ComponentMaster")
                        .WithMany("AlternateComponentMasters")
                        .HasForeignKey("CompId");

                    b.HasOne("VehicleConfigurator.Model.ModelMaster", "ModelMaster")
                        .WithMany("AlternateComponentsMasters")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponentMaster");

                    b.Navigation("ModelMaster");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.InvoiceHeader", b =>
                {
                    b.HasOne("VehicleConfigurator.Model.UserData", "UserData")
                        .WithMany("InvoiceHeaders")
                        .HasForeignKey("UserDataUserId");

                    b.Navigation("UserData");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.MfgMaster", b =>
                {
                    b.HasOne("VehicleConfigurator.Model.SegmentMaster", "SegmentMaster")
                        .WithMany("MfgMasters")
                        .HasForeignKey("SegId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SegmentMaster");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.ModelMaster", b =>
                {
                    b.HasOne("VehicleConfigurator.Model.MfgMaster", "MfgMaster")
                        .WithMany("ModelMasters")
                        .HasForeignKey("MfgId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MfgMaster");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.VehicleDetail", b =>
                {
                    b.HasOne("VehicleConfigurator.Model.ComponentMaster", "ComponentMaster")
                        .WithMany("vehicleDetails")
                        .HasForeignKey("CompId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VehicleConfigurator.Model.ModelMaster", "ModelMaster")
                        .WithMany("vehicleDetails")
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ComponentMaster");

                    b.Navigation("ModelMaster");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.ComponentMaster", b =>
                {
                    b.Navigation("AlternateComponentMasters");

                    b.Navigation("vehicleDetails");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.InvoiceHeader", b =>
                {
                    b.Navigation("InvoiceDetails");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.MfgMaster", b =>
                {
                    b.Navigation("ModelMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.ModelMaster", b =>
                {
                    b.Navigation("AlternateComponentsMasters");

                    b.Navigation("vehicleDetails");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.SegmentMaster", b =>
                {
                    b.Navigation("MfgMasters");
                });

            modelBuilder.Entity("VehicleConfigurator.Model.UserData", b =>
                {
                    b.Navigation("InvoiceHeaders");
                });
#pragma warning restore 612, 618
        }
    }
}
